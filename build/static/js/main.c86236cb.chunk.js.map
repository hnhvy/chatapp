{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVE","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuidv4","require","createChatNameFromUsers","users","excludedUser","filter","u","join","getTime","date","getHours","getMinutes","slice","createMessage","message","sender","id","time","Date","now","createChat","messages","name","isCommunity","typingUsers","createUser","socketId","LoginForm","props","setUser","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","this","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","lastMessage","active","onClick","toUpperCase","defaultProps","SideBar","reciever","onSendPrivateMessage","addChatForUser","setActiveSideBar","CHATS","activeSideBar","chats","activeChat","setActiveChat","logout","USERS","refs","map","chat","key","get","last","differenceBy","title","numberOfUsers","Messages","scrollDown","bind","container","scrollTop","scrollHeight","prevProps","prevState","mes","i","React","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","length","ChatContainer","sendOpenPrivateMessage","addUserToChat","chatId","newUser","newChats","Object","assign","removeUsersFromChat","removedUsers","newUsers","difference","resetChat","addChat","reset","messageEvent","MESSAGE_RECIEVED","typingEvent","on","updateTypingInChat","addMessageToChat","push","includes","initSocket","off","values","ChatHeading","socketUrl","Layout","io","reconnect","lougout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c86236cb.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVE:\"MESSAGE_RECIEVE\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\",\r\n\tPRIVATE_MESSAGE:\"PRIVATE_MESSAGE\",\r\n\tNEW_CHAT_USER: \"NEW_CHAT_USER\"\r\n\r\n}","const uuidv4 = require('uuid/v4')\r\n\r\n/*\r\n*\tcreateUser\r\n*\tCreates a user.\r\n*\t@prop id {string}\r\n*\t@prop name {string}\r\n*\t@param {object} \r\n*\t\tname {string}\r\n*/\r\nconst createUser = ({name = \"\", socketId = null } = {})=>(\r\n\t{\r\n\t\tid:uuidv4(),\r\n\t\tname,\r\n\t\tsocketId\r\n\t\t\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateMessage\r\n*\tCreates a messages object.\r\n* \t@prop id {string}\r\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\r\n* \t@prop message {string} actual string message\r\n* \t@prop sender {string} sender of the message\r\n*\t@param {object} \r\n*\t\tmessage {string}\r\n*\t\tsender {string}\r\n*/\r\nconst createMessage = ({message = \"\", sender = \"\"} = { })=>(\r\n\t\t{\r\n\t\t\tid:uuidv4(),\r\n\t\t\ttime:getTime(new Date(Date.now())),\r\n\t\t\tmessage,\r\n\t\t\tsender\t\r\n\t\t}\r\n\r\n\t)\r\n\r\n/*\r\n*\tcreateChat\r\n*\tCreates a Chat object\r\n* \t@prop id {string}\r\n* \t@prop name {string}\r\n* \t@prop messages {Array.Message}\r\n* \t@prop users {Array.string}\r\n*\t\t@prop typingUsers {Array.string}\r\n*\t\t@prop isCommunity {boolean}\r\n*\t@param {object} \r\n*\t\tmessages {Array.Message}\r\n*\t\tname {string}\r\n*\t\tusers {Array.string}\r\n* \r\n*/\r\nconst createChat = ({messages = [], name = \"Community\", users = [], isCommunity = false} = {})=>(\r\n\t{\r\n\t\tid:uuidv4(),\r\n\t\tname: isCommunity ? name : createChatNameFromUsers(users),\r\n\t\tmessages,\r\n\t\tusers,\r\n\t\ttypingUsers:[],\r\n\t\tisCommunity\r\n\t}\r\n)\r\n\r\n/*\r\n* createChatNameFromUsers\r\n* @param users {Array.string} \r\n* @param excludedUser {string} user to exclude from list of names\r\n* @return {string} users names concatenated by a '&' or \"Empty Chat\" if no users\r\n*/\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Chat\"\r\n}\r\n\r\n/*\r\n*\t@param date {Date}\r\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\r\n*/\r\nconst getTime = (date)=>{\r\n\treturn `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n\tcreateMessage,\r\n\tcreateChat,\r\n\tcreateUser,\r\n\tcreateChatNameFromUsers\r\n}\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tnickname:\"\",\r\n\t  \terror:\"\"\r\n\t  };\r\n\t}\r\n\r\n\tsetUser = ({user, isUser})=>{\r\n\r\n\t\tif(isUser){\r\n\t\t\tthis.setError(\"User name taken\")\r\n\t\t}else{\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e)=>{\r\n\t\tthis.setState({nickname:e.target.value})\r\n\t}\r\n\r\n\tsetError = (error)=>{\r\n\t\tthis.setState({error})\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tconst { nickname, error } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Got a nickname?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input)=>{ this.textInput = input }} \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'Username'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"error\">{error ? error:null}</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React , {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport  class SideBarOption extends Component {\r\n    static propTypes ={\r\n        name:PropTypes.string.isRequired,\r\n        lastMessage: PropTypes.string,\r\n        active: PropTypes.bool,\r\n        onClick:PropTypes.func\r\n    }\r\n    static defaultProps = {\r\n        lastMessage:\"\",\r\n        active: false,\r\n        onClick: () => {}\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, lastMessage , active , onClick } = this.props\r\n        return (\r\n            <div\r\n               \r\n                className={`user ${active ? 'active': ''}`}\r\n                onClick={ onClick }\r\n            >\r\n                <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n                <div className=\"user-info\">\r\n                    <div className=\"name\">{name}</div>\r\n                    {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import FAMenu from 'react-icons/lib/fa/keyboard-arrow-down'\r\n// import FASearch from 'react-icons/lib/fa/search'\r\n// import MdEject from 'react-icons/lib/md/eject'\r\nimport { FaAngleDown,FaAlignJustify, FaSearch } from \"react-icons/fa\";\r\n import { MdEject } from \"react-icons/md\";\r\n import { USER_CONNECTED, LOGOUT } from '../../Events'\r\n import { SideBarOption} from './SideBarOption'\r\n import {get, last , differenceBy} from 'lodash'\r\n import { createChatNameFromUsers } from '../../Factories'\r\n \r\n\r\n export default class SideBar extends Component{\r\n\tstatic type = {\r\n\t\tUSERS:\"users\",\r\n\t\tCHATS:\"chats\"\r\n\t}\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\treciever:\"\",\r\n\t\t\tactiveSideBar: SideBar.type.CHATS\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { reciever } = this.state\r\n\t\tconst { onSendPrivateMessage } = this.props\r\n\r\n\t\tonSendPrivateMessage(reciever)\r\n\t\tthis.setState({reciever:\"\"})\r\n\t}\r\n\r\n\taddChatForUser = (reciever) => {\r\n\t\tthis.props.onSendPrivateMessage(reciever)\r\n\t\tthis.setActiveSideBar(SideBar.type.CHATS)\r\n\t}\r\n\tsetActiveSideBar = (type) => {\r\n\t\tthis.setState({ activeSideBar:type })\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { chats, activeChat, user, setActiveChat, logout, users } = this.props\r\n\t\tconst { reciever, activeSideBar } = this.state\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\">\r\n\t\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t\t<div className=\"app-name\">Our Cool Chat <FaAngleDown /></div>\r\n\t\t\t\t\t\t<div className=\"menu\">\r\n\t\t\t\t\t\t\t<FaAlignJustify />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\r\n\t\t\t\t\t\t<i className=\"search-icon\"><FaSearch /></i>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={reciever}\r\n\t\t\t\t\t\t\tonChange={(e)=>{ this.setState({reciever:e.target.value}) }}/>\r\n\t\t\t\t\t\t<div className=\"plus\"></div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"side-bar-select\">\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tonClick = { ()=>{ this.setActiveSideBar(SideBar.type.CHATS) } }\r\n\t\t\t\t\t\t\tclassName={`side-bar-select__option ${ activeSideBar === SideBar.type.CHATS ? 'active':''}`}>\r\n\t\t\t\t\t\t\t<span>Chats</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tonClick = { ()=>{ this.setActiveSideBar(SideBar.type.USERS) } }\r\n\t\t\t\t\t\t\tclassName={`side-bar-select__option ${ activeSideBar === SideBar.type.USERS ? 'active':''}`}>\r\n\t\t\t\t\t\t\t<span>Users</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName=\"users\" \r\n\t\t\t\t\t\tref='users' \r\n\t\t\t\t\t\tonClick={(e)=>{ (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveSideBar === SideBar.type.CHATS ?\r\n\t\t\t\t\t\tchats.map((chat)=>{\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<SideBarOption \r\n\t\t\t\t\t\t\t\t\tkey = {chat.id}\r\n\t\t\t\t\t\t\t\t\tlastMessage = { get(last(chat.messages), 'message', '') }\r\n\t\t\t\t\t\t\t\t\tname = { chat.isCommunity ? chat.name : createChatNameFromUsers(chat.users, user.name) }\r\n\t\t\t\t\t\t\t\t\tactive = { activeChat.id === chat.id }\r\n\t\t\t\t\t\t\t\t\tonClick = { ()=>{ this.props.setActiveChat(chat) } }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tdifferenceBy(users, [user], 'name').map((user)=>{\r\n\t\t\t\t\t\t\t\treturn <SideBarOption \r\n\t\t\t\t\t\t\t\t\tkey = { user.id }\r\n\t\t\t\t\t\t\t\t\tname = { user.name  }\r\n\t\t\t\t\t\t\t\t\tonClick = { ()=>{ this.addChatForUser(user.name) }  }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t\t<div onClick={()=>{logout()}} title=\"Logout\" className=\"logout\">\r\n\t\t\t\t\t\t\t<MdEject/>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n\t}\r\n}","import React from 'react'\r\n// import FAVideo from 'react-icons/lib/fa/video-camera'\r\n// import FAUserPlus from 'react-icons/lib/fa/user-plus'\r\n// import MdEllipsisMenu from 'react-icons/lib/md/keyboard-control'\r\nimport { MdKeyboardHide } from \"react-icons/md\";\r\nimport { FaVideo, FaUserPlus} from \"react-icons/fa\";\r\nexport default function({name, numberOfUsers})  {\r\n\t\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"options\">\r\n\t\t\t\t<FaVideo />\r\n\t\t\t\t<FaUserPlus />\r\n\t\t\t\t<MdKeyboardHide />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\t\r\n}","import React , { Component} from 'react'\r\n\r\nexport default class Messages extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\t\tcomponentDidMount(){\r\n\t\t\tthis.scrollDown()\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t\tthis.scrollDown()\r\n\t\t}\r\n\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers} = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className = \"thread\">\r\n\t\t\t\t{\r\n\t\t\t\t\tmessages.map((mes, i)=>{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender == user.name && 'right'}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Typing\");\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Stop Typing\");\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type something interesting\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport SideBar from '../sidebar/SideBar'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED, \r\n\t\t\t\tTYPING, PRIVATE_MESSAGE, USER_CONNECTED, USER_DISCONNECTED,\r\n\t\t\t\tNEW_CHAT_USER } from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\nimport { values, difference, differenceBy } from 'lodash'\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\t\r\n\t\r\n\t  this.state = {\r\n\t\t  chats:[],\r\n\t\t  users:[],\r\n\t  \tactiveChat:null\r\n\t  }\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tthis.initSocket(socket)\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.off(PRIVATE_MESSAGE)\r\n\t\tsocket.off(USER_CONNECTED)\r\n\t\tsocket.off(USER_DISCONNECTED)\r\n\t\tsocket.off(NEW_CHAT_USER)\r\n\t}\r\n\t\r\n\tinitSocket(socket){\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat)\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\t})\r\n\t\tsocket.on(USER_CONNECTED, (users)=>{\r\n\t\t\tthis.setState({ users: values(users) })\r\n\t\t})\r\n\t\tsocket.on(USER_DISCONNECTED, (users)=>{\r\n\t\t\tconst removedUsers = differenceBy( this.state.users, values(users), 'id')\r\n\t\t\tthis.removeUsersFromChat(removedUsers)\r\n\t\t\tthis.setState({ users: values(users) })\t\t\t\r\n\t\t})\r\n\t\tsocket.on(NEW_CHAT_USER, this.addUserToChat)\r\n\t}\r\n\r\n\tsendOpenPrivateMessage = (reciever) => {\r\n\t\tconst { socket, user } = this.props\r\n\t\tconst { activeChat } = this.state\r\n\t\tsocket.emit(PRIVATE_MESSAGE, {reciever, sender:user.name, activeChat})\r\n\r\n\t}\r\n\taddUserToChat = ({ chatId, newUser }) => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map( chat => {\r\n\t\t\tif(chat.id === chatId){\r\n\t\t\t\treturn Object.assign({}, chat, { users: [ ...chat.users, newUser ] })\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tthis.setState({ chats:newChats })\r\n\t}\r\n\tremoveUsersFromChat = removedUsers => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map( chat => {\r\n\t\t\tlet newUsers = difference( chat.users, removedUsers.map( u => u.name ) )\r\n\t\t\t\treturn Object.assign({}, chat, { users: newUsers })\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat)=>{\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset = false)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({chats:newChats, activeChat:reset ? chat : this.state.activeChat})\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId)=>{\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\tif(chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({chats:newChats})\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) =>{\r\n\t\treturn ({isTyping, user})=>{\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id === chatId){\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({chats:newChats})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, {chatId, message} )\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, {chatId, isTyping})\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat)=>{\r\n\t\tthis.setState({activeChat})\r\n\t}\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat, users } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<SideBar\r\n\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\tchats={chats}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tusers={users}\r\n\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveChat !== null ? (\r\n\r\n\t\t\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\r\n\t\t\t\t\t\t\t\t<Messages \r\n\t\t\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MessageInput \r\n\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t<div className=\"chat-room choose\">\r\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component, Text } from 'react'\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\nconst socketUrl = \"http://localhost:3231\"\r\nexport default class Layout extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsocket:null,\r\n\t\t\tuser:null\r\n\t\t};\r\n\r\n\t}\r\n\r\n componentWillMount(){\r\n \tthis.initSocket()\r\n\r\n }\t\r\n\tinitSocket = ()=>{\r\n\t\tconst socket = io(socketUrl)\r\n\t\tsocket.on('connect', ()=> {\r\n\t\t\tif(this.state.user){\r\n\t\t\t\tthis.reconnect(socket)\r\n\t\t\t}else{\r\n\t\t\tconsole.log(\"Connected\")\r\n\t\t\t}\r\n\t})\r\n\t\tthis.setState({socket})\t\t\r\n\r\n\t}\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name,({ isUser,user})=>{\r\n\t\t\tif(isUser){\r\n\t\t\t\tthis.setState({ user:null})\r\n\t\t\t}else{\r\n\t\t\t\tthis.setUser(user)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t}\r\n\r\n\tsetUser = (user)=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(USER_CONNECTED,user);\r\n\t\tthis.setState({user})\r\n\r\n\t}\r\n\r\n\tlogout = ()=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({user:null})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t!user ?\r\n\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} />\r\n\t\t\t\t:\r\n\t\t\t\t<ChatContainer socket = {socket} user = {user} lougout = {this.logout }/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, {Component} from 'react';\nimport Layout from './components/Layout'\nimport './index.css'\nimport './styles/index.scss'\n\nfunction App() {\n  return (\n  <div>\n      <Layout title=\"Chat App\" />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}